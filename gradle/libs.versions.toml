[versions]
kotlin = "2.0.20"
kotlin-coroutines = "1.9.0"
shadow = "8.3.3"
log4j = "2.20.0"
protobuf = "3.25.2"
grpc = "1.61.0"
grpc-kotlin = "1.4.1"
simplecloud-droplet-api = "0.0.1-dev.7e049d6"
simplecloud-pubsub = "1.0.5"
jooq = "3.19.3"
configurate = "4.1.2"
sqlite-jdbc = "3.44.1.0"
gson-version = "2.10.1"
adventure-api = "4.17.0"
adventure-text-minimessage = "4.17.0"
adventur-platform = "4.3.4"
velocity = "3.1.1"
paper = "1.20-R0.1-SNAPSHOT"
spigot = "1.20-R0.1-SNAPSHOT"
bungeecord = "1.20-R0.1-SNAPSHOT"
clikt = "4.3.0"
simplecloud-controller = "0.0.30-dev.e6c9f03"
cloud-core = "2.0.0"
cloud-velocity = "2.0.0-beta.10"
cloud-bungeecord = "2.0.0-beta.10"


[libraries]
kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }

simplecloud-controller = { module = "app.simplecloud.controller:controller-api", version.ref = "simplecloud-controller" }


log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }

protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }

grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }

simplecloud-droplet-api = { module = "app.simplecloud.droplet.api:droplet-api", version.ref = "simplecloud-droplet-api" }
simplecloud-pubsub = { module = "app.simplecloud:simplecloud-pubsub", version.ref = "simplecloud-pubsub" }

velocity = { module = "com.velocitypowered:velocity-api", version.ref = "velocity" }
paper = { module = "io.papermc.paper:paper-api", version.ref = "paper" }
spigot = { module = "org.spigotmc:spigot-api", version.ref = "spigot" }
bungeecord = { module = "net.md-5:bungeecord-api", version.ref = "bungeecord" }

jooq = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
jooq-meta-extensions = { module = "org.jooq:jooq-meta-extensions", version.ref = "jooq" }
jooq-postgres = { module = "org.jooq:jooq-postgres-extensions", version.ref = "jooq" }
jooq-kotlin-coroutines = { module = "org.jooq:jooq-kotlin-coroutines", version.ref = "jooq" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson-version" }

adventure = { module = "net.kyori:adventure-api", version.ref = "adventure-api" }
adventure-text-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure-text-minimessage" }
adventure-gson = { module = "net.kyori:adventure-text-serializer-gson", version.ref = "adventure-api" }
adventure-platform-spigot = { module = "net.kyori:adventure-platform-bukkit", version.ref = "adventur-platform" }
adventure-platform-bungeecord = { module = "net.kyori:adventure-platform-bungeecord", version.ref = "adventur-platform" }

configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
configurate-extra-kotlin = { module = "org.spongepowered:configurate-extra-kotlin", version.ref = "configurate" }

sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }

cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud-core" }
cloud-velocity = { module = "org.incendo:cloud-velocity", version.ref = "cloud-velocity" }
cloud-bungeecord = { module = "org.incendo:cloud-bungee", version.ref = "cloud-bungeecord" }

[bundles]
log4j = [
    "log4j-core",
    "log4j-api",
    "log4j-slf4j"
]
proto = [
    "protobuf-kotlin",
    "grpc-stub",
    "grpc-kotlin-stub",
    "grpc-protobuf",
    "grpc-netty-shaded",
]
jooq = [
    "jooq",
    "jooq-meta",
    "jooq-postgres",
    "jooq-kotlin-coroutines"
]
configurate = [
    "configurate-yaml",
    "configurate-extra-kotlin"
]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
jooq-codegen = { id = "org.jooq.jooq-codegen-gradle", version.ref = "jooq" }
